
import type { GetStaticProps,  NextPage } from "next";
import Head from "next/head";
import { api } from "~/utils/api";


const ProfilePage: NextPage<{ username: string}> = ({username}) => {

  const {data} = api.profile.getUserByUsername.useQuery({
    username
  });
  

  if (!data) return <div>404</div>
  return (
    <>
      <Head>
        <title>{data.username}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
   <PageLoyout>
<div className="h-36 border-slate-300 bg-slate-600 relative" >
  <Image width={128} height={128} src={data.profilePicture} alt="profile"
  className="-mb-[64px] rounded-full border-2 border-black absolute bottom-0 left-0 ml-4 "
  />
  
</div>
<div className="h-[64px]"></div>
  <div className="p-4 px-8 text-2xl font-bold">{`@${data.username}`}</div>
  <div className="border-b border-slate-400 w-full " />

   </PageLoyout>
      

    </>
  );
};


import {createProxySSGHelpers} from '@trpc/react-query/ssg'
import { appRouter } from "~/server/api/root";
import { prisma } from "~/server/db";
import superjson from "superjson"
import { generateSSGHelper } from "~/server/helpers/ssgHelper";
import { PageLoyout } from "~/components/layout";
import Image from "next/image";

export const getStaticProps: GetStaticProps = async (context) => {
  const ssg = generateSSGHelper();

  const slug = context.params?.slug;

  if (typeof slug !== "string") throw new Error("no slug");

  const username = slug.replace("@", "");

  await ssg.profile.getUserByUsername.prefetch({ username });

  return {
    props: {
      trpcState: ssg.dehydrate(),
      username,
    },
  };
};

export const getStaticPaths = () => {
  return { paths: [], fallback: "blocking" };
};

export default ProfilePage;
